FROM ubuntu:18.04
ARG DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -yq \
        automake \
        ccache \
        clang-format-6.0 \
        g++ \
        gdb \
        lcov \
        html2text \
        cppcheck \
        apt-transport-https \
        gnupg2 \
        cmake \
        wget \
        sudo \
        git \
        vim \
        gnupg \
        locales \
        libexpat1-dev \
        libssl-dev \
        libbluetooth3 \
        libbluetooth-dev \
        libudev-dev \
        libusb-1.0 \
        bluez-tools \
        sqlite3 \
        libsqlite3-dev \
        build-essential \
        python-dev \
        autotools-dev \
        libbz2-dev \
        make \
        python3-pip \
        python3-setuptools \
        software-properties-common \
        openssh-server \
        && python3 -m pip install xmlschema
RUN apt-get update && apt-get -yq install \
        software-properties-common \
        openssl \
        lua5.2 \
        liblua5.2-0 \
        liblua5.2-dev \
        lua-lpeg-dev \
        screen \
        rsync \
        psmisc \
        libqt5websockets5 \
        libqt5websockets5-dev \
        net-tools \
        iproute2 \
        libssl-doc- libusb-1.0-doc- manpages- manpages-dev- \
        autotools-dev- binutils- build-essential- bzip2- cpp- cpp-5- dpkg-dev- fakeroot- \
        qttranslations5-l10n- xdg-user-dirs- xml-core- dbus-
RUN add-apt-repository --yes ppa:openjdk-r/ppa && \
    apt-get -qq update && \
    apt-get install -yq gcc g++ default-jre libicu-dev libxml2-dev
RUN locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 && chmod u+s /sbin/ifconfig /sbin/ip
ENV LC_ALL en_US.UTF-8
RUN sed -i 's|session required pam_loginuid.so|session optional pam_loginuid.so|g' /etc/pam.d/sshd \
        && mkdir -p /var/run/sshd \
        && adduser --quiet jenkins && echo "jenkins:jenkins" | chpasswd \
        && sudo echo "jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN cd /opt && wget -O cmake-3.11.0-rc3-Linux-x86_64.tar.gz https://cmake.org/files/v3.11/cmake-3.11.0-rc3-Linux-x86_64.tar.gz --no-check-certificate && \
    tar -xvf cmake-3.11.0-rc3-Linux-x86_64.tar.gz && \
    rm -f cmake-3.11.0-rc3-Linux-x86_64.tar.gz && \
    ln -s /opt/cmake-3.11.0-rc3-Linux-x86_64/bin/* /usr/local/bin
# add docker in docker to this image for remote atf implementation
RUN apt-get update && \
        apt-get -yq install ca-certificates curl && \
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
        apt-get update && \
        apt-get -yq install docker-ce && \
        rm -rf /var/cache/apt/archives && \
        rm -rf /var/lib/apt/lists/*
RUN echo "mount -t tmpfs tmpfs /home/jenkins" > /entrypoint.sh
RUN echo "/usr/sbin/sshd -D" >> /entrypoint.sh
EXPOSE 22
CMD ["/entrypoint.sh"]
